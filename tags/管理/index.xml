<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elon`s Blog – 管理</title><link>https://hyvi.github.io/tags/%E7%AE%A1%E7%90%86/</link><description>Recent content in 管理 on Elon`s Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 23 Dec 2019 20:27:25 +0800</lastBuildDate><atom:link href="https://hyvi.github.io/tags/%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Code Review 开始</title><link>https://hyvi.github.io/docs/golang/2019-12-23-code-review/</link><pubDate>Mon, 23 Dec 2019 20:27:25 +0800</pubDate><guid>https://hyvi.github.io/docs/golang/2019-12-23-code-review/</guid><description>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>整个golang团队20多人，没有code review ，对项目质量、对结果产出、对新人的成长，对团队交流的氛围影响大。 看过&lt;a href="https://www.infoq.cn/article/QJi1Kqm4pH3UNAqNzl3l">Google 代码评审规范&lt;/a>，解决了我之前一些疑问和也让我坚定的去Code Review。&lt;br>
当没有code review时候，要求重构，而重构价值是释放历史包袱，并没有产生任何其他价值&lt;/p>
&lt;ul>
&lt;li>我们的提交是这样的&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-golang" data-lang="golang">&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000">b8e45c&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">Slove&lt;/span> &lt;span style="color:#000">Confilct&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000">a39ecd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">FIXS&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">vendor&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">7817&lt;/span>&lt;span style="color:#000">d14&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">debug&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">67539e2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">debug&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">9044356&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">Slove&lt;/span> &lt;span style="color:#000">Confilct&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#000">d47db91&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">FIXS&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">ss&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">8913&lt;/span>&lt;span style="color:#000">c30&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">Slove&lt;/span> &lt;span style="color:#000">Confilct&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000">d407d2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">FIXS&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">logger&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-golang" data-lang="golang">&lt;span style="color:#000">b9af055&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">打印日志&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">1124e92&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">打印日志&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">88&lt;/span>&lt;span style="color:#000">d0eac&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">修改log&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#000">ad0b3dd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">修改日志&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000">aa0740&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">答应日志&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">824658&lt;/span>&lt;span style="color:#000">a&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">修改日志&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">178&lt;/span>&lt;span style="color:#000">c30c&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">打印日志&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000">weeks&lt;/span> &lt;span style="color:#000">ago&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>在pull request的时候，认真review下所有的commit，该合并得合并，该修改得修改&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>我们的命名是这样的&lt;br>
这里不截图纪念了.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>我们的代码分支和发版是这样的&lt;br>
本地打包,更恶心的是代码不提交本地打包的.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>我们的单元测试是这样的&lt;br>
几乎没有&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>我们开始要做Code Review， 从哪里开始了？&lt;/p>
&lt;h2 id="方式">方式&lt;/h2>
&lt;p>谁对谁在什么时候用什么方式去做什么？&lt;/p>
&lt;h3 id="第一个谁">第一个“谁”&lt;/h3>
&lt;h4 id="代码评审员">代码评审员&lt;/h4>
&lt;p>如果项目存在两人或者两人以上开发&lt;/p>
&lt;ul>
&lt;li>如果开发提交代码，则应用项目负责人&lt;/li>
&lt;li>如果应用负责人也参与开发，则由另外任一一位开发做一次review，然后上一级的负责人做第二次review。&lt;/li>
&lt;/ul>
&lt;p>如果应用负责人和开发是同一个人，这时候为“小组Leader”&lt;/p>
&lt;h4 id="自动lint工具">自动Lint工具&lt;/h4>
&lt;p>借助自动化完成代码最基本的审核， 比如reviewdog &amp;amp; golangci-lint， 更多相关知识&lt;a href="https://github.com/reviewdog/action-golangci-lint">Github Action-golangci-lint&lt;/a>&lt;/p>
&lt;h3 id="第二个谁">第二个“谁”&lt;/h3>
&lt;p>业务开发人员对应用提交的pull request&lt;/p>
&lt;h3 id="什么时候">什么时候&lt;/h3>
&lt;p>提交Review时的当天或者第二天须完成&lt;/p>
&lt;h3 id="什么方式">什么方式&lt;/h3>
&lt;p>依照代码审核规范， 目前缺少自己的审核规范，
类似规范参考&lt;/p>
&lt;ul>
&lt;li>代码审查规范
&lt;ul>
&lt;li>&lt;a href="https://www.infoq.cn/article/QJi1Kqm4pH3UNAqNzl3l">Google 代码评审规范&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jimmysong.io/eng-practices/">谷歌工程实践 by jimmysong&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>代码规范[golang]
&lt;ul>
&lt;li>&lt;a href="https://www.bwplotka.dev/2020/how-thanos-would-program-in-go/">How Thanos Would Program in Go&lt;/a>
&lt;ul>
&lt;li>参考runutil包解决defer中error的检查问题, 相比写匿名函数更加的优雅&lt;/li>
&lt;li>包 &lt;code>pkg/errors&lt;/code> 比标准的&lt;code>fmt.Errorf&lt;/code> + &lt;code>%w&lt;/code>更可读&lt;/li>
&lt;li>待补充&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="做什么">做什么&lt;/h3>
&lt;p>阅读提交的代码并给出建议完成审核&lt;/p>
&lt;h2 id="落地">落地&lt;/h2>
&lt;h3 id="reviewdog--golangci-lint在gitlab上配置实践">reviewdog &amp;amp; golangci-lint在gitlab上配置实践&lt;/h3>
&lt;p>熟悉github action方式， 借鉴其优点； 在一个项目中实践，然后推广到其他项目中。&lt;/p>
&lt;ul>
&lt;li>如何做到所有项目不需要自行配置或者简单的配置（比如增加一个配置现成的文件），并且使用同一个套代码检查标准？
&lt;ul>
&lt;li>&lt;del>制作包含reviewdog.yml的配置文件，如果做linter升级的话，更新tag为latest最新的镜像即可.&lt;/del>, 已经完成了&lt;/li>
&lt;li>&lt;del>在一半的项目上增加reviewdog&lt;/del>&lt;/li>
&lt;li>目前linter设置为golint和errcheck方式, 下一步增加golangci-lint检查代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>目前没有非常成熟的方案，需要花费一些时间去解决现有开源方案中的问题。
&lt;ul>
&lt;li>&lt;em>reviewdog 结合 golangci-lint 使用，修改其输出格式, &lt;a href="https://gitlab.com/Hyvi/reviewdog-test/-/blob/gitlab-ci-test2/.gitlab-ci.yml">more link&lt;/a>&lt;/em>
在&lt;a href="https://github.com/calmato/presto-pay/blob/master/api/user/Makefile">presto-pay&lt;/a>是使用golangci-lint,但是reviewdog在官网上没有golangci-lint的案例&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>失败&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>golangci-lint自身大而全的能力，导致其功能本身不稳定，不如golint或errcheck那么纯粹&lt;/li>
&lt;/ul>
&lt;h3 id="reviewdog--golinterrcheckgovet-在-gitlab-上配置实践">reviewdog &amp;amp; golint/errcheck/govet/&amp;hellip; 在 gitlab 上配置实践&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">reviewdog&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">stage&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 自定义镜像, 包含统一的reviewdog配置文件和需要安装的reviewdog/golangci-lint版本&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">golang:custom-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">before_script&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v0.10.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">export GITLAB_API=&amp;#34;https://examplegitlab.com/api/v4&amp;#34; &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">script&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">reviewdog -conf=/etc/reviewdog/reviewdog.yml -reporter=gitlab-mr-discussion -guess -fail-on-error=true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">only&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">merge_requests&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>reviewdog.yml 配置如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#204a87;font-weight:bold">runner&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">golangci&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cmd&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">golangci-lint run --config=/etc/reviewdog/golangci/golangci.yml ./...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">errorformat&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">&amp;#39;%E%f:%l:%c&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">%m&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">&amp;#39;%E%f:%l&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">%m&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#39;%C%.%#&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">level&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">warning&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更多：&lt;/p>
&lt;ul>
&lt;li>reviewdog 结合各种错误检查，详细见: &lt;a href="https://gitlab.com/reviewdog/reviewdog/-/blob/master/.reviewdog.yml">reviewdog.yml&lt;/a>&lt;/li>
&lt;li>使用预设的errformat, 例如通过参数&lt;code>-f=golangci-lint&lt;/code>，更多的预设errformat使用 &lt;code>reviewdog -list&lt;/code> 查看， 点击链接&lt;a href="https://github.com/reviewdog/errorformat/blob/master/fmts/go.go"> go.go &lt;/a>&lt;/li>
&lt;li>在gitlab里配置参考gitlab上的工程：&lt;a href="https://gitlab.com/Hyvi/reviewdog-test/-/blob/gitlab-ci-test2/.gitlab-ci.yml">reviewdog test&lt;/a>&lt;/li>
&lt;li>exit code的处理
&lt;ul>
&lt;li>errcheck 命令在检查到 err 时，exit code为0 （通过echo $?查看, 更多查看&lt;a href="https://www.tldp.org/LDP/abs/html/exit-status.html#EXITSTATUSREF">Chapter 6. Exit and Exit Status&lt;/a>）&lt;/li>
&lt;li>reviewdog默认的 exit code 为0， 当加上 -fail-on-error=true时候则会返回1（当检查到不规范的时候）&lt;/li>
&lt;li>errcheck | reviewdog 根据现象是当errcheck 的 exit code 为1时，job会失败。 解决办法是 ( errcheck 2&amp;gt;&amp;amp;1 || true ) | reviewdog&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>在这个过程中，不断增加的检查机制, 并说明理由\目的&lt;/p>
&lt;p>&lt;a href="https://github.com/thanos-io/thanos">thanos&lt;/a> 代码规范推荐的代码 linter 工具 &lt;code>go vet&lt;/code>, 同时也推荐 golangci-lint,
但 golangci-lint 无法配置的原因, 将考虑一个个配置其默认的 &lt;a href="https://golangci-lint.run/usage/linters/">linter&lt;/a> , 建议参考Thanos 里配置的 &lt;a href="https://www.bwplotka.dev/2020/how-thanos-would-program-in-go/#golangci-lint">linters&lt;/a>&lt;/p>
&lt;ul>
&lt;li>govet&lt;/li>
&lt;li>errcheck&lt;/li>
&lt;li>staticcheck&lt;/li>
&lt;li>unused&lt;/li>
&lt;li>gosimple&lt;/li>
&lt;li>structcheck&lt;/li>
&lt;li>varcheck&lt;/li>
&lt;li>ineffassign&lt;/li>
&lt;li>deadcode&lt;/li>
&lt;li>typecheck&lt;/li>
&lt;/ul>
&lt;h4 id="golint">golint&lt;/h4>
&lt;h4 id="errcheck">errcheck&lt;/h4>
&lt;h4 id="go-vet">go vet&lt;/h4>
&lt;h2 id="todo">TODO&lt;/h2>
&lt;p>反复阅读代码评审规范.
不断增加或修正 linter&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>reviewdog
&lt;a href="https://github.com/reviewdog/reviewdog#reporter-github-pullrequest-review-comment--reportergithub-pr-review">https://github.com/reviewdog/reviewdog#reporter-github-pullrequest-review-comment--reportergithub-pr-review&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>golangci-lint
&lt;a href="https://github.com/golangci/golangci-lint">https://github.com/golangci/golangci-lint&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;br>
&lt;center> ·End· &lt;/center></description></item><item><title>Docs: 《卓有成效的管理者》之决策</title><link>https://hyvi.github.io/docs/team/2019-09-14-team-manager-decision/</link><pubDate>Sat, 14 Sep 2019 15:31:05 +0800</pubDate><guid>https://hyvi.github.io/docs/team/2019-09-14-team-manager-decision/</guid><description>
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>任务繁多，&lt;strong>决策&lt;/strong>是其中一项。&lt;br>
当遇到如何决策的时候，特别费脑，不知道如何决定，应该是不知道如何去决定的。缺少思路，被各种杂乱无章的问题围绕，跳不出来，也迟迟没有给出最终的决定。&lt;br>
而通过这边文章，Get一种方式，帮助理清楚思路，快速做出决策。&lt;/p>
&lt;h2 id="方法论">方法论&lt;/h2>
&lt;p>待补充&lt;/p>
&lt;h2 id="后续">后续&lt;/h2>
&lt;p>时间管理也是一个问题，工作中事情并不是有计划的单一事项，而是各种无关的事情需要处理。&lt;br>
如果每天在这种杂乱的事情中周旋，时间长了必定没有任何特别的产出。&lt;br>
理想的状态是： 保持一条重要事情的主线，其他事情围绕主线可慢可不做的开展。&lt;/p>
&lt;br>
&lt;center> ·End· &lt;/center></description></item><item><title>Docs: 《卓有成效的管理者》之我能贡献什么</title><link>https://hyvi.github.io/docs/team/2019-09-12-team-manager-contribute/</link><pubDate>Thu, 12 Sep 2019 22:09:34 +0800</pubDate><guid>https://hyvi.github.io/docs/team/2019-09-12-team-manager-contribute/</guid><description>
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>最近思考的一个问题之一： 怎么让团队有明显的产出，虽然有这个问题，但又因为日常工作中的琐事太多，往往很少有时间去思考这个问题。时间久了慢慢忘记了，特此在此记录下来。&lt;/p>
&lt;p>标题来自《卓有成效的管理者》by 彼得·德鲁克&lt;/p>
&lt;h2 id="方法论">方法论&lt;/h2>
&lt;h3 id="what">WHAT&lt;/h3>
&lt;p>我能有什么贡献？&lt;/p>
&lt;h3 id="why">WHY&lt;/h3>
&lt;p>重视贡献是有效性的关键&lt;br>
重视贡献的管理者，其所作作为是与众不同的&lt;br>
重视贡献能挖掘工作中尚未发挥的能力&lt;/p>
&lt;h3 id="what-1">WHAT&lt;/h3>
&lt;h4 id="贡献">贡献&lt;/h4>
&lt;p>管理者若想做点贡献，就必须在这三个方面下功夫。&lt;/p>
&lt;ul>
&lt;li>直接成果&lt;/li>
&lt;li>树立新的价值观以及对这些价值观的重新确认&lt;/li>
&lt;li>培养和开发明天所需要的人才&lt;/li>
&lt;/ul>
&lt;h3 id="who">WHO&lt;/h3>
&lt;h4 id="作为管理者能为这个团队做或贡献什么">作为管理者，能为这个团队做（或贡献）什么&lt;/h4>
&lt;h4 id="作为团队中的成员能为这个团队做或贡献什么">作为团队中的成员，能为这个团队做（或贡献）什么？&lt;/h4>
&lt;h3 id="how">HOW&lt;/h3>
&lt;h4 id="如何使专业人员的工作卓有成效">如何使专业人员的工作卓有成效&lt;/h4>
&lt;p>知识分子有责任让别人了解自己。&lt;br>
“为了便于你为机构作出贡献，你需要我做些什么贡献？ 需要我在什么时候，以哪种形式，用什么方式来提供这些贡献”&lt;/p>
&lt;h4 id="正确的人际关系">正确的人际关系&lt;/h4>
&lt;h5 id="相互沟通">相互沟通：&lt;/h5>
&lt;p>“我们的组织和我，期望你作出怎样的贡献? 我应该期望你做什么呢？如何使你的知识和能力得到最大的发挥？”&lt;/p>
&lt;h5 id="团队合作-强调贡献有助于横向的沟通因此能够促成团队合作">团队合作： 强调贡献有助于横向的沟通，因此能够促成团队合作&lt;/h5>
&lt;p>“谁需要我的产出，并使它产生效益”&lt;/p>
&lt;h5 id="自我发展-个人能否有所发展很大程度上在于你是否重视贡献">自我发展： 个人能否有所发展，很大程度上在于你是否重视贡献&lt;/h5>
&lt;p>“我对组织能有什么最大的贡献”&lt;/p>
&lt;h5 id="培养他人-重视贡献的管理者启发他人寻求自我发展">培养他人： 重视贡献的管理者启发他人寻求自我发展&lt;/h5>
&lt;p>管理者的标准是以需求任务为基准，要求很高，高度的期望，远大的目标，是具有重大冲击力的工作&lt;/p>
&lt;h4 id="有效的会议">有效的会议&lt;/h4>
&lt;p>从会议中得到什么，会议的目的是什么，应该是什么&lt;/p>
&lt;br>
&lt;center> ·End· &lt;/center></description></item></channel></rss>