<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elon`s Blog – vim</title><link>https://hyvi.github.io/tags/vim/</link><description>Recent content in vim on Elon`s Blog</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hyvi.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: fencview.vim + xshell + vim + 各种中文编码问题</title><link>https://hyvi.github.io/docs/tool/2013-08-13-xshell_vim_encoding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hyvi.github.io/docs/tool/2013-08-13-xshell_vim_encoding/</guid><description>
&lt;p>c++ 老代码都不是utf-8编码，估计是gb2312或gbk编码，而javascript是utf-8编码&lt;br>
咋办？&lt;br>
vim中只设置过&lt;br>
&amp;ldquo;set encoding=gb2312 termencoding=utf-8 &amp;ldquo;fileencoding=gbk&lt;/p>
&lt;p>不同编码文件，怎么通过一个设置来搞定呢？ 疑惑！！！&lt;br>
以前碰到不同文件后缀名能用不同的高亮，不同的格式化。 &lt;br>
按此逻辑。。。&lt;br>
不同的文件编码可以用不同的配置咯。&lt;/p>
&lt;p>google 就如上帝！！！&lt;/p>
&lt;p>发现了 &lt;a href="http://edyfox.codecarver.org/html/vim_fileencodings_detection.html">http://edyfox.codecarver.org/html/vim_fileencodings_detection.html&lt;/a>&lt;br>
最后提到了统一解决办法 fencview.vim&lt;/p>
&lt;p>杜绝眼高手低：搞起&lt;/p>
&lt;p>一个小时&amp;hellip;&lt;br>
两个小时&amp;hellip;&lt;br>
搞定&lt;/p>
&lt;ol>
&lt;li>下载插件：fencview&lt;/li>
&lt;li>配置.vimrc&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#000">encoding&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>utf-8
&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#000">termencoding&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>utf-8 &lt;span style="color:#4e9a06">&amp;#34;fileencoding=utf-8
&lt;/span>&lt;span style="color:#4e9a06">set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
&lt;/span>&lt;span style="color:#4e9a06">let g:fencview_autodetect=1
&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87">let&lt;/span> g:fencview_auto_patterns&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;*&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后一行注释掉： 因为不注释javascript 文件不高亮。&lt;/p></description></item><item><title>Docs: VIM 转 VSCODE</title><link>https://hyvi.github.io/docs/tool/2019-03-21-vimvscode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hyvi.github.io/docs/tool/2019-03-21-vimvscode/</guid><description>
&lt;p>VIM 适合折腾
VS Code 适合高效率业务开发
开始学习 VS Code 的快捷键&lt;/p>
&lt;br />
## 更新记录
2019.07.08 还在用 VIM... 有毒？
&lt;p>2021-10-24 继续使用，发现各种好特性，比如在一行中删除光标后所有字符到有括号&amp;quot;)&amp;quot;，这些技巧提升了效率。以防忘记，统一在这里记录，便于翻阅。&lt;/p>
&lt;h2 id="常用的编辑快捷键">常用的编辑快捷键&lt;/h2>
&lt;h3 id="editing">Editing&lt;/h3>
&lt;p>To delete forward up to character &amp;lsquo;X&amp;rsquo; type &lt;code>dtX&lt;/code>&lt;/p>
&lt;p>To delete forward through character &amp;lsquo;X&amp;rsquo; type &lt;code>dfX&lt;/code>&lt;/p>
&lt;p>To delete backward up to character &amp;lsquo;X&amp;rsquo; type &lt;code>dTX&lt;/code>&lt;/p>
&lt;p>To delete backward through character &amp;lsquo;X&amp;rsquo; type &lt;code>dFX&lt;/code>&lt;/p>
&lt;p>Aligning text with Tabular.vim &lt;code>:tab \/&lt;/code>&lt;/p>
&lt;h3 id="navigation">Navigation&lt;/h3>
&lt;h2 id="历史">历史&lt;/h2>
&lt;p>vim-go 为什么错误这么让人不知所措，比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gorename: can&lt;span style="color:#a40000">&amp;#39;&lt;/span>t find package containing
gometalinter: unkown linters: govet, typecheck, unsed, gosimple
--enable-all/--disable-all can not be combined
quickfix 没有显示出来，并且仅仅提示 GoMetaLinter Failed
&lt;/code>&lt;/pre>&lt;/div>&lt;p>解决办法有很多种，而在不断尝试过程中解决问题：&lt;/p>
&lt;ul>
&lt;li>对 vim-go 配置详细了解，比如&lt;code>g:go_metalinter_enabled&lt;/code>和&lt;code>g:go_metalinter_autosave_enabled&lt;/code>&lt;/li>
&lt;li>更换最新的版本，比如 vim-go 和 golangci-lint 的最新稳定版本，比如 gorename 最新版本并不支持 go modules 项目&lt;/li>
&lt;/ul>
&lt;p>不深入了解 vim-go 的原理，用不来 vim-go， 期望：某天能跟 vscode golang 插件一样好用。 不过，在使用 vim-go 的过程中，对静态代码检查工具有了更多了解，比如有对 golang 代码的安全检查：gosec。&lt;/p>
&lt;p>Updated At Thu Jul 18 13:34:37 2019&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;p>[1] vimcasts.org Learn Essential Vim Skills&lt;/p>
&lt;p>[2] Casperfeng&amp;rsquo;s Github: mastering-vim, Tring to become a proficient vim user.&lt;/p></description></item></channel></rss>